<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    
    <Style x:Key="BaseRoundedButton" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="{StaticResource BaseButtonRoundingAngle}"
                                Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DoButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseRoundedButton}">

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#77000000"/>
                <Setter Property="TextElement.Foreground" Value="{StaticResource BaseBlocksBackgroundBrush}"/>
                <Setter Property="BorderThickness" Value="3"/>
                <Setter Property="BorderBrush" Value="{StaticResource BaseFontBrush}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border" CornerRadius="{StaticResource BaseButtonRoundingAngle}"
                Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                            <GradientStop Color="#77000000" Offset="0.0"/>
                            <GradientStop Color="#000000" Offset="1.0"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="TextElement.Foreground" Value="{StaticResource BaseBlocksBackgroundBrush}"/>
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource BaseFontBrush}"/>
                <Setter Property="TextElement.Foreground" Value="{StaticResource BaseBlocksBackgroundBrush}"/>
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#c6c6c6"/>
                <Setter Property="TextElement.Foreground" Value="#828282"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="BorderBrush" Value="{x:Null}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="UndoButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseRoundedButton}">

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#77000000"/>
                <Setter Property="TextElement.Foreground" Value="{StaticResource BaseBlocksBackgroundBrush}"/>
            </Trigger>

            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="BorderThickness" Value="3"/>
                <Setter Property="BorderBrush" Value="{StaticResource BaseFontBrush}"/>
                <Setter Property="Background" Value="{StaticResource BaseBlocksBackgroundBrush}"/>
                <Setter Property="TextElement.Foreground" Value="{StaticResource BaseFontBrush}"/>
                
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border" CornerRadius="{StaticResource BaseButtonRoundingAngle}"
                                Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource BaseFontBrush}"/>
                <Setter Property="TextElement.Foreground" Value="{StaticResource BaseBlocksBackgroundBrush}"/>
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#c6c6c6"/>
                <Setter Property="TextElement.Foreground" Value="#828282"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="BorderBrush" Value="{x:Null}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>